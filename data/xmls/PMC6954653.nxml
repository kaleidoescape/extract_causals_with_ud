<!DOCTYPE article
PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD with MathML3 v1.2 20190208//EN" "JATS-archivearticle1-mathml3.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:mml="http://www.w3.org/1998/Math/MathML" article-type="research-article"><?properties open_access?><front><journal-meta><journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id><journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id><journal-id journal-id-type="publisher-id">bioinformatics</journal-id><journal-title-group><journal-title>Bioinformatics</journal-title></journal-title-group><issn pub-type="ppub">1367-4803</issn><issn pub-type="epub">1367-4811</issn><publisher><publisher-name>Oxford University Press</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="pmid">31228194</article-id><article-id pub-id-type="pmc">6954653</article-id><article-id pub-id-type="doi">10.1093/bioinformatics/btz440</article-id><article-id pub-id-type="publisher-id">btz440</article-id><article-categories><subj-group subj-group-type="heading"><subject>Original Papers</subject><subj-group subj-group-type="category-toc-heading"><subject>Databases and Ontologies</subject></subj-group></subj-group></article-categories><title-group><article-title>A fully computational and reasonable representation for karyotypes</article-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Warrender</surname><given-names>Jennifer D</given-names></name><xref ref-type="aff" rid="btz440-aff1">1</xref></contrib><contrib contrib-type="author"><name><surname>Moorman</surname><given-names>Anthony V</given-names></name><xref ref-type="aff" rid="btz440-aff2">2</xref></contrib><contrib contrib-type="author"><name><surname>Lord</surname><given-names>Phillip</given-names></name><xref ref-type="corresp" rid="btz440-cor1"/><xref ref-type="aff" rid="btz440-aff1">1</xref><!--<email>phillip.lord@newcastle.ac.uk</email>--></contrib></contrib-group><contrib-group><contrib contrib-type="editor"><name><surname>Wren</surname><given-names>Jonathan</given-names></name><role>Associate Editor</role></contrib></contrib-group><aff id="btz440-aff1"><label>1</label>
<institution>School of Computing, Newcastle University</institution>, Newcastle-upon-Tyne NE4 5TG, <country country="GB">UK</country></aff><aff id="btz440-aff2"><label>2</label>
<institution>Northern Institute for Cancer Research, Newcastle University</institution>, Newcastle-upon-Tyne NE1 7RU, <country country="GB">UK</country></aff><author-notes><corresp id="btz440-cor1">To whom correspondence should be addressed E-mail: <email>phillip.lord@newcastle.ac.uk</email></corresp></author-notes><pub-date pub-type="ppub"><day>15</day><month>12</month><year>2019</year></pub-date><pub-date pub-type="epub" iso-8601-date="2019-06-22"><day>22</day><month>6</month><year>2019</year></pub-date><pub-date pub-type="pmc-release"><day>22</day><month>6</month><year>2019</year></pub-date><!-- PMC Release delay is 0 months and 0 days and was based on the <pub-date pub-type="epub"/>. --><volume>35</volume><issue>24</issue><fpage>5264</fpage><lpage>5270</lpage><history><date date-type="received"><day>23</day><month>7</month><year>2018</year></date><date date-type="rev-recd"><day>28</day><month>2</month><year>2019</year></date><date date-type="accepted"><day>18</day><month>6</month><year>2019</year></date></history><permissions><copyright-statement>&#x000a9; The Author(s) 2019. Published by Oxford University Press.</copyright-statement><copyright-year>2019</copyright-year><license license-type="cc-by" xlink:href="http://creativecommons.org/licenses/by/4.0/"><license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p></license></permissions><self-uri xlink:href="btz440.pdf"/><abstract><title>Abstract</title><sec id="s1"><title>Summary</title><p>The human karyotype has been used as a mechanism for describing and detecting gross abnormalities in the genome for many decades. It is used both for routine diagnostic purposes and for research to further our understanding of the causes of disease. Despite these important applications there has been no rigorous computational representation of the karyotype; rather an informal, string-based representation is used, making it hard to check, organize and search data of this form. In this article, we describe our use of OWL, the Ontology Web Language, to generate a fully computational representation of the karyotype; the development of this ontology represents a significant advance from the traditional bioinformatics use for tagging and navigation and has necessitated the development of a new ontology development environment called Tawny-OWL.</p></sec><sec id="s2"><title>Availability and implementation</title><p>The Karyotype Ontology and associated Tawny-OWL source code is available on GitHub at <ext-link ext-link-type="uri" xlink:href="https://github.com/jaydchan/tawny-karyotype">https://github.com/jaydchan/tawny-karyotype</ext-link>, under a LGPL License, Version 3.0.</p></sec></abstract><funding-group><award-group award-type="grant"><funding-source><named-content content-type="funder-name">Engineering and Physical Sciences Research Council</named-content><named-content content-type="funder-identifier">10.13039/501100000266</named-content></funding-source><award-id>EP/P50564X/1</award-id></award-group></funding-group><counts><page-count count="7"/></counts></article-meta></front><body><sec><title>1 Introduction</title><p>The genetic complement of organisms is carried on one or more chromosomes. These chromosomes have a characteristic organization and, in many cases, a characteristic cytogenetic appearance. The analysis of this appearance has been known to relate directly to the underlying genetics for many years and, in fact, before the mechanistic link between the two was well understood. It remains of vital diagnostic importance, as well as providing a key tool for a large research community.</p><p>Human karyotypes are represented using <italic>the International System for Human Cytogenetic Nomenclature</italic> (<xref rid="btz440-B10" ref-type="bibr">Shaffer <italic>et al.</italic>, 2012</xref>). In essence, this represents the karyotype as a structured string (which we call ISCN strings) which describes the chromosome complement of an individual human, cell or, even, a mix of cells in an individual cell line. This system is highly developed having evolved over many years, heavily used and richly expressive; however, ISCN strings do not have good computational properties. Unlike string representations, such as InCHI (<xref rid="btz440-B4" ref-type="bibr">Heller <italic>et al.</italic>, 2015</xref>), ISCN strings lack a formal interpretation or a concise computational representation. Likewise, their specification is informal, indeed, it has no electronic representation and is not searchable. This causes significant difficulties for both small- and large-scale use as well as manipulation of karyotypic information: it is not straight-forward, for example, to validate that an individual string fulfils the specification, nor to search a large number of karyotypes to find those that fulfil some criteria. However, the formal representation of the diseases/disorders caused by these ISCN strings has been previously modelled in vocabularies such as the National Cancer Institute Thesaurus (NCIT) (<xref rid="btz440-B3" ref-type="bibr">Hartel <italic>et al.</italic>, 2005</xref>) and Orphanet Rare Disease Ontology (ORDO) (<xref rid="btz440-B12" ref-type="bibr">Vasant <italic>et al.</italic>, 2014</xref>). While we cannot use these to reason over, ORDO could be a useful source of annotation for modelling Karyotypic diseases.</p><p>In this article, we describe a new representation for human karyotypes, the <italic>Karyotype Ontology</italic>. It has been defined using OWL, the Ontology Web Language, which means that it has a formal interpretation and specification. Unlike many traditional bio-ontologies, it makes extensive use of the expressivity of OWL, which means that karyotypes can be validated. With the use of a computational reasoner, it is possible to express queries enabling search against a large number of karyotypes. In addition, we describe the methodology that we have used to develop this ontology. To allow validation and searching, the ontology makes extensive use of complex, but repetitive expressions in OWL; for this reason, it has been built programmatically, using the Tawny-OWL library (<xref rid="btz440-B8" ref-type="bibr">Lord, 2013</xref>). This has also allowed us to develop a full suite of unit tests, test the scalability of the reasoning and to investigate the effect of different representations on this scalability.</p></sec><sec><title>2 What is an ISCN string</title><p>The human karyotype is normally represented using a string following the conventions defined in the International System for Human Cytogenetic Nomenclature (ISCN). First published around the 1960s, this system has been updated regularly subsequently. Although unnamed in the specification, here we call a string following these conventions an <italic>ISCN string</italic>.</p><p>Unsurprisingly, for a specification of this age the ISCN specification is informally defined. It does not define a computationally interpretable grammar nor is there a formal interpretation or underlying semantics. Similarly, the specification itself is not available in a computationally amenable or even an electronic format, meaning that is not even straight-forwardly searchable. As a result of this ISCN strings are difficult to parse, validate and query, especially for complicated ISCN strings (<xref ref-type="fig" rid="btz440-F1">Fig.&#x000a0;1</xref>, for example, shows the representation of Prader&#x02013;Willi syndrome).
</p><fig id="btz440-F1" orientation="portrait" position="float"><label>Fig. 1.</label><caption><p>Three example ISCN strings that show an increase in complexity. Specifically, (<bold>A</bold>) A tumour karyotype in a male with loss of the Y chromosome, (<bold>B</bold>) Prader&#x02013;Willi Syndrome i.e. deletion in the 15q11-q12 region and (<bold>C</bold>) an arbitrary karyotype that involves a variety of autosomal and allosomal abnormalities</p></caption><graphic xlink:href="btz440f1"/></fig><p>There are a number of different approaches that could be taken to describe a karyotype: at heart, the karyotype is a description of the chromosomes and, underlying this, the genome of the organism in question. One potential way to represent the karyotype, therefore, would be to simply describe all the chromosomes and bands present. Unfortunately, with this approach, all the chromosomes and the bands must be described for every karyotype, which would be a fairly inefficient representation; additionally, a representation of this form would be hard to interpret for the user.</p><p>The ISCN therefore takes the approach of representing the karyotype as a series of changes, or events; we might say that a karyotype has lost a single chromosome 1, rather than enumerating all the chromosomes that it does have. There are a large number of changes that can happen to a chromosome, and these are described in <xref rid="btz440-T1" ref-type="table">Table&#x000a0;1</xref>. For any particular karyotype, these <italic>changes</italic> are notional and interpretative; they are not a description of the changes that definitely have happened but those that could have happened to produce the observed karyotype. For instance, a whole chromosome loss could involve the loss of the p-arm, and then the later loss of the q-arm. From this perspective, ISCN is rather like an edit distance as opposed to a description of history.
</p><table-wrap id="btz440-T1" orientation="portrait" position="float"><label>Table 1.</label><caption><p>List of events present in the ISCN which can be represented using the Karyotype Ontology</p></caption><table frame="hsides" rules="groups"><colgroup span="1"><col valign="top" align="left" span="1"/><col valign="top" align="left" span="1"/></colgroup><tbody><tr><td rowspan="1" colspan="1">add</td><td rowspan="1" colspan="1">Addition</td></tr><tr><td rowspan="1" colspan="1">del</td><td rowspan="1" colspan="1">Deletion</td></tr><tr><td rowspan="1" colspan="1">der</td><td rowspan="1" colspan="1">Derivative Chromosome</td></tr><tr><td rowspan="1" colspan="1">dic</td><td rowspan="1" colspan="1">Dicentric Chromosome</td></tr><tr><td rowspan="1" colspan="1">dup</td><td rowspan="1" colspan="1">Duplication</td></tr><tr><td rowspan="1" colspan="1">fis</td><td rowspan="1" colspan="1">Fission</td></tr><tr><td rowspan="1" colspan="1">fra</td><td rowspan="1" colspan="1">Fragile Site</td></tr><tr><td rowspan="1" colspan="1">hsr</td><td rowspan="1" colspan="1">Homogeneously Staining Region</td></tr><tr><td rowspan="1" colspan="1">ins</td><td rowspan="1" colspan="1">Insertion</td></tr><tr><td rowspan="1" colspan="1">inv</td><td rowspan="1" colspan="1">Inversion</td></tr><tr><td rowspan="1" colspan="1">i</td><td rowspan="1" colspan="1">Isochromosome</td></tr><tr><td rowspan="1" colspan="1">mar</td><td rowspan="1" colspan="1">Marker Chromosome</td></tr><tr><td rowspan="1" colspan="1">neo</td><td rowspan="1" colspan="1">Neocentromere</td></tr><tr><td rowspan="1" colspan="1">qdp</td><td rowspan="1" colspan="1">Quadruplication</td></tr><tr><td rowspan="1" colspan="1">r</td><td rowspan="1" colspan="1">Ring Chromosome</td></tr><tr><td rowspan="1" colspan="1">tas</td><td rowspan="1" colspan="1">Telomeric Association</td></tr><tr><td rowspan="1" colspan="1">t</td><td rowspan="1" colspan="1">Translocation</td></tr><tr><td rowspan="1" colspan="1">trc</td><td rowspan="1" colspan="1">Tricentric Chromosome</td></tr><tr><td rowspan="1" colspan="1">trp</td><td rowspan="1" colspan="1">Triplication</td></tr></tbody></table></table-wrap></sec><sec><title>3 Representing karyotypes</title><p>There are a large number of different technologies that could be used to represent a karyotype, mostly obviously a relational or XML based data model. Both of these would be capable of solving one immediate problem with ISCN strings&#x02014;that is of the surface syntax. However, the underlying semantics are still complex and difficult to adequately represent. Therefore, we choose to use an ontological representation using the Ontology Web Language; this has a relatively rich semantics for representing categorical statements similar to those in the ISCN. We call this representation, the <italic>Karyotype Ontology</italic>.</p><p>As with ISCN, there are a number of different ways that we could represent the karyotype and some of the same issues are raised; for example, our initial experiments encouraged us to follow the lead of ISCN and use an event-based model. Therefore, all the forms of modification described in ISCN have been directly represented in the Karyotype Ontology.</p><p>As well as the type of modification, we wish to be able to describe the locations on the chromosome that the modifications affect; therefore, the Karyotype Ontology has a direct representation of all 23 chromosomes and further the 800+ bands that they contain; this means that it is not possible to specify a chromosome or chromosome band that does not exist.</p><p>We wished to be able to describe <italic>regions</italic> of chromosomes, enabling us to state, for example, that a deletion covered from 1p34 to 1p32. The Karyotype Ontology therefore explicitly describes the organization and layout of the chromosome bands.</p><p>We also have a set of non-functional requirements. Our purpose for building the Karyotype Ontology was to enable a searchable and computationally tractable description of a human karyotype designation. We wished the ontology to be as small and as simple as possible, to ensure that any reasoning will happen as quickly as possible.</p></sec><sec><title>4 Building the karyotype ontology</title><p>The human karyotype has 23 chromosomes and around 800 bands (at different resolutions). Representing this ontologically presents a practical barrier: most ontology tools are designed for a person to create most classes and, based on our requirements, the Karyotype Ontology would need to have over 800 classes. While many ontologies are larger than this, the Karyotype Ontology is highly repetitive, with most classes following a standard pattern; moreover, we wished to maintain the flexibility of changing the axiomatization of the Karyotype Ontology. All of this would have been challenging with existing tools.</p><p>For all of these reasons, the Karyotype Ontology was built using a new tool, Tawny-OWL, that was motivated by this use case. Specifically, Tawny-OWL is an ontology development environment implemented as a Domain Specific Language (DSL) in the programming language Clojure. This provides the ontology developer with a simple syntax (modelled on the OWL Manchester Syntax, <xref rid="btz440-B6" ref-type="bibr">Horridge and Patel-Schneider, 2012</xref>) with which to build their ontology, embedded in a complete programmatic language which provides: an evaluative shell, or REPL; functions for building patterns or other extensions; a unit test framework. In addition, the wider Clojure ecosystem provides development tools such as: IDEs or power editors with access to version control; code browsers; debuggers; build and deployment tools. In this article, we describe the ontology mostly using Tawny-OWL syntax, with one translation to Manchester syntax for comparison: full details of Tawny-OWL syntax are available in the manual (see <ext-link ext-link-type="uri" xlink:href="http://homepages.cs.ncl.ac.uk/phillip.lord/take-wing/take_wing.html">http://homepages.cs.ncl.ac.uk/phillip.lord/take-wing/take_wing.html</ext-link>).</p><p>The Karyotype Ontology is therefore implemented using Tawny-OWL. The chromosomes and their banding patterns are written as literal data structures in code; these are then converted using patterns implemented in Clojure and Tawny-OWL into a set of ontological axioms using the OWL API (<xref rid="btz440-B5" ref-type="bibr">Horridge and Bechhofer, 2011</xref>). The key advantage of this approach is that it is possible to redesign the patterns which produce the ontological representation freely, and then update the entire ontology so that it is consistent against the redesign.</p><p>Next, we describe the overall organization of classes and properties in the Karyotype Ontology; we illustrate this in <xref ref-type="fig" rid="btz440-F2">Figure&#x000a0;2</xref>, showing how they are applied to describe the Prader-Willi karyotype shown earlier.
</p><fig id="btz440-F2" orientation="portrait" position="float"><label>Fig. 2.</label><caption><p>Some of the key entities in the Karyotype Ontology as they apply to describing the Prader-Willi karyotype</p></caption><graphic xlink:href="btz440f2"/></fig><p>The human karyotype is modelled (perhaps obviously) as a partonomy, with some inheritance. We actually use properties called &#x02018;isBandOf&#x02019;; as we do not use an upper ontology, these are not related to a property with the name &#x02018;part-of&#x02019;. So, for example,</p><p>
<monospace>HumanChromosome1Bandp35</monospace> is a <monospace>HumanChromosome1p</monospace> which is a band of <monospace>HumanChromosome1</monospace> which is, itself a <monospace>HumanAutosome</monospace>, which is a <monospace>HumanChromosome</monospace>. The &#x02018;open world&#x02019; semantics of OWL means that we also need to make explicit the disjointness between bands and chromosomes. This is done at several different levels to minimize the total number of disjoint axioms that need to be made: for example, <monospace>HumanChromosome1</monospace> is disjoint with <monospace>HumanChromosome2</monospace> but not <monospace>HumanChromosomeX</monospace>, as the sex chromosomes and autosomes are already disjoint. Likewise, bands are only directly disjoint from bands on the same chromosome arm.</p><fig id="btz440-F3" orientation="portrait" position="float"><label>Fig. 3.</label><caption><p>Visualizing the higher resolution sub-bands of human chromosome band 17q21</p></caption><graphic xlink:href="btz440f3"/></fig><p>We also explicitly model resolution. As Clojure symbols cannot start with numbers all resolutions and karyotypes start with the <bold>r</bold> and <bold>k</bold> character, respectively. The human karyotype has more visible bands at higher resolutions, and these need to be explicitly described (see <xref ref-type="fig" rid="btz440-F3">Fig.&#x000a0;3</xref>). We achieve this with a class and object property. Similar to prefixes in OWL we use Clojure namespaces to refer to entities that are defined in other namespaces. As with <italic>named</italic> karyotypes, we provide a number of defined classes.
</p><p>
<boxed-text id="btz440-BOX1" position="float" orientation="portrait"><p>
<disp-quote content-type="extract"><p>
<monospace>(defclass r300-band)</monospace>
</p><p>
<monospace>(defoproperty seenAtResolution</monospace>
</p><p>&#x02003;<monospace>:domain h/HumanChromosomeBand</monospace></p><p>&#x02003;<monospace>:range Resolution)</monospace></p><p>
<monospace>(defclass is-300-band</monospace>
</p><p>&#x02003;<monospace>:equivalent</monospace></p><p>&#x02003;<monospace>(owl-and</monospace></p><p>&#x02003;&#x02003;<monospace>h/HumanChromosomeBand</monospace></p><p>&#x02003;&#x02003;<monospace>(owl-some seenAtResolution r300-band)))</monospace></p></disp-quote>
</p></boxed-text>
</p><p>This is syntactically very similar to the equivalent statements in Manchester Syntax which we show here for reference:</p><p>
<boxed-text id="btz440-BOX2" position="float" orientation="portrait"><p>
<disp-quote content-type="extract"><p>
<monospace>Class: res: r300-band</monospace>
</p><p>&#x02003;&#x02003;<monospace>SubClassOf:</monospace></p><p>&#x02003;&#x02003;&#x02003;&#x02003;<monospace>res: Resolution</monospace></p><p>
<monospace>ObjectProperty: res: seenAtResolution</monospace>
</p><p>&#x02003;&#x02003;<monospace>Domain:</monospace></p><p>&#x02003;&#x02003;&#x02003;&#x02003;<monospace>hum: HumanChromosomeBand</monospace></p><p>&#x02003;&#x02003;<monospace>Range:</monospace></p><p>&#x02003;&#x02003;&#x02003;&#x02003;<monospace>res: Resolution</monospace></p><p>
<monospace>Class: res: is-300-band</monospace>
</p><p>&#x02003;&#x02003;<monospace>EquivalentTo:</monospace></p><p>&#x02003;&#x02003;&#x02003;&#x02003;<monospace>hum: HumanChromosomeBand</monospace></p><p>&#x02003;&#x02003;&#x02003;&#x02003;<monospace>and (res: seenAtResolution</monospace></p><p>&#x02003;&#x02003;&#x02003;&#x02003;&#x02003;&#x02003;&#x02003;&#x02003;<monospace>some res: r300-band)</monospace></p></disp-quote>
</p></boxed-text>
</p><p>As well as the human chromosome structure, we model a large number of &#x02018;features&#x02019; such as fragile sites, neocentromeres and ring chromosomes, all of which are defined in the ISCN. These are all associated with functions which can be used to define restrictions describing these features of chromosomes. For example, the statements in this listing define an ontology class, <monospace>FragileSite</monospace> and the pattern function <monospace>fragilesite</monospace> which uses this class. In Clojure, we define functions using the reserved keyword defn and parameters are declared within the square brackets. <monospace>fragilesite</monospace> itself uses a second pattern which, in this case, expands to an OWL &#x02018;some&#x02019; restriction.</p><p>
<boxed-text id="btz440-BOX3" position="float" orientation="portrait"><p>
<disp-quote content-type="extract"><p>
<monospace>(defclass FragileSite)</monospace>
</p><p>
<monospace>(defn fragilesite</monospace>
</p><p>&#x02003;<monospace>[n band]</monospace></p><p>&#x02003;<monospace>(direct-feature</monospace></p><p>&#x02003;<monospace>n</monospace></p><p>&#x02003;<monospace>(owl-and FragileSite</monospace></p><p>&#x02003;<monospace>(owl-some e/hasBreakPoint band))))</monospace></p></disp-quote>
</p></boxed-text>
</p><p>The main purpose of this use of a function is simply to provide additional syntax, which reduces the amount of typing but, as with the use of patterns defining the chromosome structure, it also provides a degree of abstraction, meaning the pattern could be updated.</p><p>In a similar vein, we also model the ISCN events, describing changes that can happen to a chromosome. As with features, these are defined in pairs defining an OWL class and a pattern. For example, an addition of a band is implemented as follows:</p><p>
<boxed-text id="btz440-BOX4" position="float" orientation="portrait"><p>
<disp-quote content-type="extract"><p>
<monospace>(defclass Addition)</monospace>
</p><p>
<monospace>(defn addition-band</monospace>
</p><p>&#x02003;<monospace>[band]</monospace></p><p>&#x02003;<monospace>(owl-and</monospace></p><p>
<monospace>&#x02003;&#x02003;Addition</monospace>
</p><p>&#x02003;&#x02003;<monospace>(owl-some hasBreakPoint band)))</monospace></p></disp-quote>
</p></boxed-text>
</p><p>For events to be meaningful, we have to provide some start point to which these events can happen. We define these simply such that their composition is not explicitly either in terms of their chromosomes or chromosome bands. For example, the diploid karyotypes are defined as follows:</p><p>
<boxed-text id="btz440-BOX5" position="float" orientation="portrait"><p>
<disp-quote content-type="extract"><p>
<monospace>(defclass k46_XN</monospace>
</p><p>&#x02003;<monospace>:super BaseKaryotype)</monospace></p><p>
<monospace>(as-disjoint-subclasses</monospace>
</p><p>&#x02003;<monospace>k46_XN</monospace></p><p>&#x02003;<monospace>(defclass k46_XX)</monospace></p><p>&#x02003;<monospace>(defclass k46_XY))</monospace></p></disp-quote>
</p></boxed-text>
</p><p>In order to create a Clojure symbol that was also legal in Manchester Syntax, the commas have been replaced with underscores. We also define haploid, triploid and tetraploid karyotypes, and a large number of <italic>named</italic> karyotypes associated either with biological conditions (e.g. Male or Female karyotypes) or specific syndromes (e.g. trisomy 21, or Down Syndrome). These latter are taken from examples given in the ISCN&#x02014;we have not encoded all the karyotypes simply because there are a very large number, but have sampled across most sections of the book. A set of karyotype kinds are also stated as <italic>defined</italic> classes, that can be used in conjunction with a computational reasoner as queries: for example, a structural or numerically abnormal karyotype (defined below).</p><p>
<boxed-text id="btz440-BOX6" position="float" orientation="portrait"><p>
<disp-quote content-type="extract"><p>
<monospace>(defclass NumericalAbnormalKaryotype</monospace>
</p><p>&#x02003;<monospace>:equivalent</monospace></p><p>&#x02003;<monospace>(owl-or</monospace></p><p>&#x02003;&#x02003;<monospace>(e/event</monospace></p><p>&#x02003;&#x02003;<monospace>nil</monospace></p><p>&#x02003;&#x02003;<monospace>(e/addition-chromosome</monospace></p><p>&#x02003;&#x02003;&#x02003;<monospace>h/HumanChromosome))</monospace></p><p>&#x02003;<monospace>(e/event</monospace></p><p>&#x02003;&#x02003;<monospace>nil</monospace></p><p>&#x02003;&#x02003;<monospace>(e/deletion-chromosome</monospace></p><p>&#x02003;&#x02003;&#x02003;<monospace>h/HumanChromosome))))</monospace></p></disp-quote>
</p></boxed-text>
</p><p>Taken together, this enables us to express karyotypes of arbitrary complexity. For example, consider the representation of the ISCN string 45, X,-Y that we saw in <xref ref-type="fig" rid="btz440-F1">Figure&#x000a0;1</xref>; this karyotype can be seen as arising from a single event happening to a base karyotype.</p><p>
<boxed-text id="btz440-BOX7" position="float" orientation="portrait"><p>
<disp-quote content-type="extract"><p>
<monospace>(defclass k45_X_-Y</monospace>
</p><p>&#x02003;<monospace>:super</monospace></p><p>
<monospace>&#x02003;(owl-some b/derivedFrom b/k46_XY)</monospace>
</p><p>&#x02003;<monospace>(e/deletion 1 h/HumanChromosomeY)</monospace></p></disp-quote>
</p></boxed-text>
</p><p>This representation is clear and unambiguous and can be reasoned over; for example, it can be retrieved as a diploid, male karyotype with loss of the Y-chromosome.</p><p>In the next section, we describe our testing strategy which ensures that this reasoning works as expected.</p></sec><sec><title>5 Testing the karyotype ontology</title><p>The Karyotype Ontology is a relatively complex ontology, containing some rich axiomatization. This reason alone would make it sensible to test, to ensure that the ontology has been built correctly. There is, however, a more compelling reason in this case; our intention is that with the Karyotype Ontology it should be possible to query over a large number of karyotypes defined using this ontology, for those which fulfil a given set of criteria using computational reasoning. For this, we need to ensure that the ontology reasons correctly.</p><p>This has been achieved through combination of the Clojure unit test framework, and Tawny-OWL&#x02019;s interface to the computational reasoner HermiT. Tests are defined into two halves; first, we have picked a large number of the classes defined in the Karyotype Ontology for testing.</p><p>For example, the following statements assert that Down syndrome is a diploid karyotype with an autosomal gain, and that 46, XY is NOT female. We do this using the <bold>is</bold> macro, found in Clojure&#x02019;s testing framework, to make these assertions.</p><p>
<boxed-text id="btz440-BOX8" position="float" orientation="portrait"><p>
<disp-quote content-type="extract"><p>
<monospace>(is</monospace>
</p><p>&#x02003;<monospace>(r/isuperclass?</monospace></p><p>&#x02003;&#x02003;<monospace>n/DownSyndrome</monospace></p><p>&#x02003;&#x02003;<monospace>n/DiploidKaryotype))</monospace></p><p>
<monospace>(is</monospace>
</p><p>&#x02003;<monospace>(r/isuperclass?</monospace></p><p>&#x02003;&#x02003;<monospace>n/DownSyndrome</monospace></p><p>&#x02003;&#x02003;<monospace>n/NumericalAbnormalKaryotypeAutosomalGain))</monospace></p><p>
<monospace>(is</monospace>
</p><p>
<monospace>(not</monospace>
</p><p>&#x02003;&#x02003;<monospace>(r/isuperclass?</monospace></p><p>&#x02003;&#x02003;&#x02003;<monospace>b/k46_XY</monospace></p><p>&#x02003;&#x02003;&#x02003;<monospace>n/FemaleKaryotype)))</monospace></p></disp-quote>
</p></boxed-text>
</p><p>In addition, we have classified a large number of different example karyotypes from ISCN against 17 different defined classes (diploid, female, fission and so on). Writing all these tests by hand would have been long-winded so, instead, they are encoded in a spreadsheet, following a document-centric approach (<xref rid="btz440-B1" ref-type="bibr">Blfgeh <italic>et al.</italic>, 2017</xref>) and mirroring existing template-based ontology tools such as Populous (<xref rid="btz440-B7" ref-type="bibr">Jupp <italic>et al.</italic>, 2010</xref>). This spreadsheet is directly parsed as part of the Karyotype Ontology test cycle. In addition, we also use this to specify whether the karyotype is parsable from the ISCN string, an additional functionality of the Karyotype Ontology code base.</p></sec><sec><title>6 Optimizing the karyotype ontology</title><p>The primary intention of the Karyotype Ontology is to provide an implementation which is capable of machine interpretation and can be reasoned over. This is not true for many ontologies which aim to provide a controlled vocabulary or to aid navigation (<xref rid="btz440-B11" ref-type="bibr">Stevens and Lord, 2009</xref>). One key concern, therefore, during the construction of the ontology was that it is efficient and can be reasoned over. This is a concern for any ontology written in OWL-DL such as the Karyotype Ontology. We demonstrate some of the considerations necessary when describing ordering of the chromosome bands.</p><p>The human karyotype contains bands which are necessarily ordered, and this order is necessary to understand the impact of a number of aspects of a given karyotype. For instance, a deletion from 1p31 to 1p21 will also impact on all the sequences in band 1p22 (and 1p31 and 1p21), since this band is between the two breakpoints, but only these since only 1p22 is between these two.</p><p>Ontologies are generally not good at representing order, as their underlying data structures are, similarly, not ordered. When considered as a tree or directed acyclic graph, leaf nodes are not ordered with respect to each other; likewise, the formal logical representation of OWL treats most elements as a (disordered) set. Despite not having formal support for ordering, there are a number of ways in which it can be achieved; we consider four possibilities here.
<list list-type="bullet"><list-item><p><bold>No Order:</bold> Order is not represented.</p></list-item><list-item><p><bold>Enumeration:</bold> All the affected bands are explicitly stated in the model, using a Tawny-OWL pattern to expand from a start-point to an end-point.</p></list-item><list-item><p><bold>Sequence Pattern:</bold> This ontology design pattern (<xref rid="btz440-B2" ref-type="bibr">Drummond <italic>et al.</italic>, 2006</xref>) describes a sequence, using a &#x02018;next&#x02019; to and &#x02018;rest&#x02019; relationship. &#x02018;next&#x02019; describes links to an item, and &#x02018;rest&#x02019; another list.</p></list-item><list-item><p><bold>Data Properties:</bold> Bands are given an integer value, using OWLs datatype support to enable comparison.</p></list-item></list></p><p>These have different characteristics in terms of expressivity, ease of use and so forth. The most important characteristic, though, which is query/reasoning performance is almost impossible to predict <italic>a priori</italic> and may, anyway, vary between different extant reasoners or a single reasoner over time.</p><p>One interesting consequence of the pattern-driven approach used to develop the Karyotype Ontology is that it is possible to change the patterns and then regenerate the ontology. In short, we can test these four different possibilities. This was achieved by generating large numbers of random karyotypes, and then testing (see <ext-link ext-link-type="uri" xlink:href="https://github.com/jaydchan/tawny-karyotype-scaling">https://github.com/jaydchan/tawny-karyotype-scaling</ext-link>). Results are shown in <xref ref-type="fig" rid="btz440-F4">Figure&#x000a0;4</xref>.
</p><fig id="btz440-F4" orientation="portrait" position="float"><label>Fig. 4.</label><caption><p>Bar charts showing the mean reasoning times for each affects implementation from 101 to 104 number of karyotypes. As shown in the key, the first bar represents reasoning times for the original representation (0), while the following three bars represent the reasoning times for enumeration (1), sequence patterns (2)and data properties (3) implementation, respectively</p></caption><graphic xlink:href="btz440f4"/></fig><p>From these results, we can see that the reasoning performance of the Karyotype Ontology is entirely usable, at under a minute for 10&#x000a0;000 karyotypes, that further adding ordering information to the Karyotype Ontology does not add excessive time to the overall reasoning, and that all three different mechanisms for representation of order have acceptable performance. However, we note that the different representations scale differently and that the choice is dependent on the number of karyotypes being searched. While, we note that while we supported several axiomatizations to enable performance testing during development, it could also be used during deployment, as a mechanism for scaling a karyotype database.</p></sec><sec><title>7 Discussion</title><p>In this article, we have described the development of the Karyotype Ontology. This ontology provides the ability to describe the human karyotype. Its representation closely follows the ISCN standard and is strongly based upon it. We have followed this approach for a variety of reasons. It is obviously most familiar to biologists and clinicians who deal with this data. Most importantly, ISCN has been built up and refined over many years and contains a lot of knowledge, and is likely to be a good representation.</p><p>We have considered the possibility of building the Karyotype Ontology purely as a partonomy; that is a representation that describes the human karyotype on the basis of the chromosomes and chromosome bands that it has. Initially, we decided against this representation on the grounds of performance. However, there are subtler reasons why this is not appropriate. For example, the consider the karyotype 45, XO which manifests as Turners Syndrome; that it is has a single X-chromosome. Partonomically, this is identical to the karyotype 45, X,-Y which also has a single X-chromosome. However, the latter karyotype is of a cell-line that has lost a Y-chromosome, while the former is a congenital &#x02018;loss&#x02019;. We can only distinguish these two on the basis of their history. This example also illustrates a surprising use of reasoning within the ontology (see <xref ref-type="fig" rid="btz440-F5">Fig.&#x000a0;5</xref>). Intuitively, you would assume that a male would be defined as any karyotype with a Y-chromosome; however, 45, X,-Y should be considered to be male even though it has no Y; the Karyotype Ontology, therefore, defines a male karyotype as one <italic>derived from</italic> 46, XY. This definition means 45, X,-Y is male; Turners syndrome, although phenotypically female, can be reasoned neither to be male nor female since the Karyotype Ontology defines to be derived from 46, XN&#x02014;we do not know which kind of chromosome it has lost; it would, of course, be possible to assert this knowledge, once it is clear what answer the community would expect.
</p><fig id="btz440-F5" orientation="portrait" position="float"><label>Fig. 5.</label><caption><p>The inferred class hierarchy for classes describing sex. None of the links in this diagram are explicitly stated</p></caption><graphic xlink:href="btz440f5"/></fig><p>The Karyotype Ontology is also not an ontology in the realist mould (<xref rid="btz440-B9" ref-type="bibr">Lord and Stevens, 2010</xref>). We neither represent the partonomy as it exists, nor claim to represent the actual, historical changes that have been made during the course of the development of the cell or organism. In addition, we have followed the pragmatic approach of making it as simple as possible: we have eschewed making distinctions that we do not need to fulfil our computational objective; we have not used an upper ontology; and, we have not cross-linked to other bio-ontologies. These are not omissions; they have been avoided as they do not fulfil the direct use case; if we wished to add these, they would be added to a secondary ontology which could import the Karyotype Ontology. The Karyotype Ontology is a computational representation of a specification to enable searching of karyotypes, and fulfils this function. In this sense, the Karyotype Ontology is quite a different form of ontology from many others seen in bio-medical ontologies.</p><p>In addition to this, we have adopted a different development style from many others. This ontology provided us a use case for the Tawny-OWL library, which enables fully programmatic ontology development. This has allowed us to adopt most of the industry-standard practices and tools from software engineering including functional abstraction, repeatable builds and unit tests, as well as tools such as an IDEs, versioning and continuous integration. This also gives us the ability to change wholescale our axiomatization by changing our patterns. We have used this ability to test the performance impact of different axiomatizations; to our knowledge this is the first time, this form of large-scale performance testing has been used on a complete ontology.</p><p>There are, of course, some limitations to the Karyotype Ontology. We believe that the semantics of the representation are a considerable improvement over the existing ISCN strings in terms of computational precision and formality and, further, the syntax is defined, parsable and works well with existing tooling; however, the current representation is too verbose and difficult to write to directly to take the place of these strings. We have developed a parser that will convert some ISCN strings into the Karyotype Ontology, but given the informal definition of ISCN this is obviously difficult and heuristic; in future, we hope to develop a formal string representation which can compile to the OWL representation, similar to the way that InCHI strings can be converted to a chemical structure.</p><p>We also note that the Karyotype Ontology is currently specifically a representation of the human karyotype; it would require modification or extension for use with other organisms. Given the difference in representation between different communities, it is likely that only a few high-level terms would be sharable. However, the generalized methodology that we have developed would be applicable. In this sense, as well as providing the first highly computational representation of the human karyotype, we have also introduced a new methodology for ontology development, recasting ontologies from tools for tagging records to a tool for modelling a complex area of biology accurately, precisely and searchable. We expect that there are many further areas of biology where this will prove to be useful.</p></sec><sec><title>Funding</title><p>This work was supported by the Engineering and Physical Sciences Research Council [EP/P50564X/1].</p><p>
<italic>Conflict of Interest</italic>: none declared.</p></sec></body><back><ref-list id="ref1"><title>References</title><ref id="btz440-B1"><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Blfgeh</surname><given-names>A.</given-names></name></person-group>
<etal>et al</etal> (<year>2017</year>) 
<article-title>A document-centric approach for developing the tolAPC ontology</article-title>. <source>J Biomed Semantics</source>, <volume>8</volume>, <fpage>54</fpage>.<pub-id pub-id-type="pmid">29179777</pub-id></mixed-citation></ref><ref id="btz440-B2"><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Drummond</surname><given-names>N.</given-names></name></person-group>
<etal>et al</etal> (<year>2006</year>) 
<article-title>Putting OWL in order: patterns for sequences in OWL</article-title>. <source>Concrete</source>, <fpage>1</fpage>&#x02013;<lpage>10</lpage>.</mixed-citation></ref><ref id="btz440-B3"><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Hartel</surname><given-names>F.W.</given-names></name></person-group>
<etal>et al</etal> (<year>2005</year>) 
<article-title>Modeling a description logic vocabulary for cancer research</article-title>. <source>J. Biomed. Inform</source>., <volume>38</volume>, <fpage>114</fpage>&#x02013;<lpage>129</lpage>.<pub-id pub-id-type="pmid">15797001</pub-id></mixed-citation></ref><ref id="btz440-B4"><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Heller</surname><given-names>S.R.</given-names></name></person-group>
<etal>et al</etal> (<year>2015</year>) 
<article-title>InChI, the IUPAC International Chemical Identifier</article-title>. <source>J. Cheminform</source>., <volume>7</volume>, <fpage>23.</fpage><pub-id pub-id-type="pmid">26136848</pub-id></mixed-citation></ref><ref id="btz440-B5"><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Horridge</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Bechhofer</surname><given-names>S.</given-names></name></person-group> (<year>2011</year>) 
<article-title>The OWL API: a Java API for OWL ontologies</article-title>. <source>Semant. Web</source>, <volume>2</volume>, <fpage>11</fpage>&#x02013;<lpage>21</lpage>.</mixed-citation></ref><ref id="btz440-B6"><mixed-citation publication-type="other">
<person-group person-group-type="author"><name name-style="western"><surname>Horridge</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Patel-Schneider</surname><given-names>P.F.</given-names></name></person-group> (<year>2012</year>). Owl 2 web ontology language manchester syntax, 2nd edn. <italic>Technical report.</italic> W3C Working Group Note. See <ext-link ext-link-type="uri" xlink:href="https://www.w3.org/TR/owl2-manchester-syntax/">https://www.w3.org/TR/owl2-manchester-syntax/</ext-link>.</mixed-citation></ref><ref id="btz440-B7"><mixed-citation publication-type="other">
<person-group person-group-type="author"><name name-style="western"><surname>Jupp</surname><given-names>S.</given-names></name></person-group>
<etal>et al</etal> (<year>2010</year>). Populous: a tool for populating ontology templates. In: <italic>Proceedings of the 3rd International Workshop on Semantic Web Applications and Tools for the Life Sciences Berlin, Germany, December 8&#x02013;10 2010 CEUR Workshop Proceedings.</italic> See <ext-link ext-link-type="uri" xlink:href="http://sunsite.informatik.rwth-aachen.de/Publications/CEUR-WS/Vol-698/">http://sunsite.informatik.rwth-aachen.de/Publications/CEUR-WS/Vol-698/</ext-link>. </mixed-citation></ref><ref id="btz440-B8"><mixed-citation publication-type="other">
<person-group person-group-type="author"><name name-style="western"><surname>Lord</surname><given-names>P.</given-names></name></person-group> (<year>2013</year>). <italic>The Semantic Web takes Wing: Programming Ontologies with Tawny-OWL.</italic> In: <italic>CEUR Workshop Proceedings</italic>, Vol. 1080. See <ext-link ext-link-type="uri" xlink:href="http://ceur-ws.org/Vol-1080/">http://ceur-ws.org/Vol-1080/</ext-link>.</mixed-citation></ref><ref id="btz440-B9"><mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Lord</surname><given-names>P.</given-names></name>, <name name-style="western"><surname>Stevens</surname><given-names>R.</given-names></name></person-group> (<year>2010</year>) 
<article-title>Adding a little reality to building ontologies for biology</article-title>. <source>PLoS One</source>, <volume>5</volume>, <fpage>7.</fpage></mixed-citation></ref><ref id="btz440-B10"><mixed-citation publication-type="book">
<person-group person-group-type="editor"><name name-style="western"><surname>Shaffer</surname><given-names>L.</given-names></name>, <name name-style="western"><surname>McGowan-Jordan</surname><given-names>J.</given-names></name>, <name name-style="western"><surname>Schmid</surname><given-names>M.</given-names></name></person-group>, eds (<year>2012</year>). <source>ISCN 2013: An International System for Human Cytogenetic Nomenclature (2013)</source>. 
<publisher-name>Karger</publisher-name>, 
<publisher-loc>Basel, Switzerland</publisher-loc>.</mixed-citation></ref><ref id="btz440-B11"><mixed-citation publication-type="book">
<person-group person-group-type="author"><name name-style="western"><surname>Stevens</surname><given-names>R.</given-names></name>, <name name-style="western"><surname>Lord</surname><given-names>P.</given-names></name></person-group> (<year>2009</year>). <chapter-title>Application of ontologies in bioinformatics</chapter-title> In: <person-group person-group-type="editor"><name name-style="western"><surname>Staab</surname><given-names>S.</given-names></name>, <name name-style="western"><surname>Studer</surname><given-names>R.</given-names></name></person-group> (eds) <source>Handbook on Ontologies. International Handbooks on Information Systems</source>. 
<publisher-name>Springer</publisher-name>, 
<publisher-loc>Berlin, Heidelberg</publisher-loc>.</mixed-citation></ref><ref id="btz440-B12"><mixed-citation publication-type="other">
<person-group person-group-type="author"><name name-style="western"><surname>Vasant</surname><given-names>D.</given-names></name></person-group>
<etal>et al</etal> (<year>2014</year>) Ordo: an ontology connecting rare disease, epidemiology and genetic data. In: <italic>Proceedings of ISMB</italic>, Vol. 30.</mixed-citation></ref></ref-list></back></article>